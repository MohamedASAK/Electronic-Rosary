;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/17/2024 7:28:07 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2897      	GOTO       151
_thousandsLoop:
;C_Code_Project.c,24 :: 		void thousandsLoop() {
;C_Code_Project.c,25 :: 		if (Flag3 >= 9) {
0x0003	0x3080      	MOVLW      128
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x0628      	XORWF      _Flag3+1, 0
0x0007	0x00F0      	MOVWF      R0
0x0008	0x3080      	MOVLW      128
0x0009	0x0270      	SUBWF      R0, 0
0x000A	0x1D03      	BTFSS      STATUS, 2
0x000B	0x280E      	GOTO       L__thousandsLoop22
0x000C	0x3009      	MOVLW      9
0x000D	0x0227      	SUBWF      _Flag3, 0
L__thousandsLoop22:
0x000E	0x1C03      	BTFSS      STATUS, 0
0x000F	0x2816      	GOTO       L_thousandsLoop2
;C_Code_Project.c,26 :: 		Flag3 = 0;
0x0010	0x01A7      	CLRF       _Flag3
0x0011	0x01A8      	CLRF       _Flag3+1
;C_Code_Project.c,27 :: 		PORTC = Flag3;
0x0012	0x0187      	CLRF       PORTC
;C_Code_Project.c,28 :: 		Flag4++;
0x0013	0x0AA9      	INCF       _Flag4, 1
0x0014	0x1903      	BTFSC      STATUS, 2
0x0015	0x0AAA      	INCF       _Flag4+1, 1
;C_Code_Project.c,29 :: 		}
L_thousandsLoop2:
;C_Code_Project.c,30 :: 		PORTB = Flag4;
0x0016	0x0829      	MOVF       _Flag4, 0
0x0017	0x0086      	MOVWF      PORTB
;C_Code_Project.c,31 :: 		}
L_end_thousandsLoop:
0x0018	0x0008      	RETURN
; end of _thousandsLoop
_hundredsLoop:
;C_Code_Project.c,33 :: 		void hundredsLoop() {
;C_Code_Project.c,34 :: 		if (Flag2 >= 9) {
0x0019	0x3080      	MOVLW      128
0x001A	0x1283      	BCF        STATUS, 5
0x001B	0x1303      	BCF        STATUS, 6
0x001C	0x0623      	XORWF      _Flag2+1, 0
0x001D	0x00F0      	MOVWF      R0
0x001E	0x3080      	MOVLW      128
0x001F	0x0270      	SUBWF      R0, 0
0x0020	0x1D03      	BTFSS      STATUS, 2
0x0021	0x2824      	GOTO       L__hundredsLoop24
0x0022	0x3009      	MOVLW      9
0x0023	0x0222      	SUBWF      _Flag2, 0
L__hundredsLoop24:
0x0024	0x1C03      	BTFSS      STATUS, 0
0x0025	0x282C      	GOTO       L_hundredsLoop3
;C_Code_Project.c,35 :: 		Flag2 = 0;
0x0026	0x01A2      	CLRF       _Flag2
0x0027	0x01A3      	CLRF       _Flag2+1
;C_Code_Project.c,36 :: 		PORTD = Flag2;
0x0028	0x0188      	CLRF       PORTD
;C_Code_Project.c,37 :: 		Flag3++;
0x0029	0x0AA7      	INCF       _Flag3, 1
0x002A	0x1903      	BTFSC      STATUS, 2
0x002B	0x0AA8      	INCF       _Flag3+1, 1
;C_Code_Project.c,38 :: 		}
L_hundredsLoop3:
;C_Code_Project.c,39 :: 		PORTC = Flag3;
0x002C	0x0827      	MOVF       _Flag3, 0
0x002D	0x0087      	MOVWF      PORTC
;C_Code_Project.c,40 :: 		if (Flag3 > 9) {
0x002E	0x3080      	MOVLW      128
0x002F	0x00F0      	MOVWF      R0
0x0030	0x3080      	MOVLW      128
0x0031	0x0628      	XORWF      _Flag3+1, 0
0x0032	0x0270      	SUBWF      R0, 0
0x0033	0x1D03      	BTFSS      STATUS, 2
0x0034	0x2837      	GOTO       L__hundredsLoop25
0x0035	0x0827      	MOVF       _Flag3, 0
0x0036	0x3C09      	SUBLW      9
L__hundredsLoop25:
0x0037	0x1803      	BTFSC      STATUS, 0
0x0038	0x283A      	GOTO       L_hundredsLoop4
;C_Code_Project.c,41 :: 		thousandsLoop();
0x0039	0x2003      	CALL       _thousandsLoop
;C_Code_Project.c,42 :: 		}
L_hundredsLoop4:
;C_Code_Project.c,43 :: 		}
L_end_hundredsLoop:
0x003A	0x0008      	RETURN
; end of _hundredsLoop
_flagInit:
;C_Code_Project.c,3 :: 		void flagInit() {
;C_Code_Project.c,4 :: 		Flag1 = 0;
0x003B	0x1283      	BCF        STATUS, 5
0x003C	0x1303      	BCF        STATUS, 6
0x003D	0x01A0      	CLRF       _Flag1
0x003E	0x01A1      	CLRF       _Flag1+1
;C_Code_Project.c,5 :: 		Flag2 = 0;
0x003F	0x01A2      	CLRF       _Flag2
0x0040	0x01A3      	CLRF       _Flag2+1
;C_Code_Project.c,6 :: 		Flag3 = 0;
0x0041	0x01A7      	CLRF       _Flag3
0x0042	0x01A8      	CLRF       _Flag3+1
;C_Code_Project.c,7 :: 		Flag4 = 0;
0x0043	0x01A9      	CLRF       _Flag4
0x0044	0x01AA      	CLRF       _Flag4+1
;C_Code_Project.c,8 :: 		}
L_end_flagInit:
0x0045	0x0008      	RETURN
; end of _flagInit
_portInit:
;C_Code_Project.c,9 :: 		void portInit() {
;C_Code_Project.c,10 :: 		PORTB = 0;
0x0046	0x1283      	BCF        STATUS, 5
0x0047	0x1303      	BCF        STATUS, 6
0x0048	0x0186      	CLRF       PORTB
;C_Code_Project.c,11 :: 		PORTC = 0;
0x0049	0x0187      	CLRF       PORTC
;C_Code_Project.c,12 :: 		PORTD = 0;
0x004A	0x0188      	CLRF       PORTD
;C_Code_Project.c,13 :: 		PORTA = 0;
0x004B	0x0185      	CLRF       PORTA
;C_Code_Project.c,14 :: 		}
L_end_portInit:
0x004C	0x0008      	RETURN
; end of _portInit
_tensLoop:
;C_Code_Project.c,45 :: 		void tensLoop() {
;C_Code_Project.c,46 :: 		if (Flag1 >= 9) {
0x004D	0x3080      	MOVLW      128
0x004E	0x1283      	BCF        STATUS, 5
0x004F	0x1303      	BCF        STATUS, 6
0x0050	0x0621      	XORWF      _Flag1+1, 0
0x0051	0x00F0      	MOVWF      R0
0x0052	0x3080      	MOVLW      128
0x0053	0x0270      	SUBWF      R0, 0
0x0054	0x1D03      	BTFSS      STATUS, 2
0x0055	0x2858      	GOTO       L__tensLoop27
0x0056	0x3009      	MOVLW      9
0x0057	0x0220      	SUBWF      _Flag1, 0
L__tensLoop27:
0x0058	0x1C03      	BTFSS      STATUS, 0
0x0059	0x2860      	GOTO       L_tensLoop5
;C_Code_Project.c,47 :: 		Flag1 = 0;
0x005A	0x01A0      	CLRF       _Flag1
0x005B	0x01A1      	CLRF       _Flag1+1
;C_Code_Project.c,48 :: 		PORTA= Flag1;
0x005C	0x0185      	CLRF       PORTA
;C_Code_Project.c,49 :: 		Flag2++;
0x005D	0x0AA2      	INCF       _Flag2, 1
0x005E	0x1903      	BTFSC      STATUS, 2
0x005F	0x0AA3      	INCF       _Flag2+1, 1
;C_Code_Project.c,50 :: 		}
L_tensLoop5:
;C_Code_Project.c,51 :: 		PORTD = Flag2;
0x0060	0x0822      	MOVF       _Flag2, 0
0x0061	0x0088      	MOVWF      PORTD
;C_Code_Project.c,52 :: 		if (Flag2 > 9) {
0x0062	0x3080      	MOVLW      128
0x0063	0x00F0      	MOVWF      R0
0x0064	0x3080      	MOVLW      128
0x0065	0x0623      	XORWF      _Flag2+1, 0
0x0066	0x0270      	SUBWF      R0, 0
0x0067	0x1D03      	BTFSS      STATUS, 2
0x0068	0x286B      	GOTO       L__tensLoop28
0x0069	0x0822      	MOVF       _Flag2, 0
0x006A	0x3C09      	SUBLW      9
L__tensLoop28:
0x006B	0x1803      	BTFSC      STATUS, 0
0x006C	0x286E      	GOTO       L_tensLoop6
;C_Code_Project.c,53 :: 		hundredsLoop();
0x006D	0x2019      	CALL       _hundredsLoop
;C_Code_Project.c,54 :: 		}
L_tensLoop6:
;C_Code_Project.c,55 :: 		}
L_end_tensLoop:
0x006E	0x0008      	RETURN
; end of _tensLoop
_reset:
;C_Code_Project.c,15 :: 		void reset() {
;C_Code_Project.c,16 :: 		if (PORTE.B1 == 1) {
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x1303      	BCF        STATUS, 6
0x0071	0x1C89      	BTFSS      PORTE, 1
0x0072	0x2876      	GOTO       L_reset0
;C_Code_Project.c,17 :: 		portInit();
0x0073	0x2046      	CALL       _portInit
;C_Code_Project.c,18 :: 		flagInit();
0x0074	0x203B      	CALL       _flagInit
;C_Code_Project.c,19 :: 		} else {
0x0075	0x2877      	GOTO       L_reset1
L_reset0:
;C_Code_Project.c,20 :: 		PORTB.B1 = 0;
0x0076	0x1086      	BCF        PORTB, 1
;C_Code_Project.c,21 :: 		}
L_reset1:
;C_Code_Project.c,22 :: 		}
L_end_reset:
0x0077	0x0008      	RETURN
; end of _reset
_onesLoop:
;C_Code_Project.c,57 :: 		void onesLoop() {
;C_Code_Project.c,58 :: 		if (Flag1 <= 9) {
0x0078	0x3080      	MOVLW      128
0x0079	0x1283      	BCF        STATUS, 5
0x007A	0x1303      	BCF        STATUS, 6
0x007B	0x00F0      	MOVWF      R0
0x007C	0x3080      	MOVLW      128
0x007D	0x0621      	XORWF      _Flag1+1, 0
0x007E	0x0270      	SUBWF      R0, 0
0x007F	0x1D03      	BTFSS      STATUS, 2
0x0080	0x2883      	GOTO       L__onesLoop30
0x0081	0x0820      	MOVF       _Flag1, 0
0x0082	0x3C09      	SUBLW      9
L__onesLoop30:
0x0083	0x1C03      	BTFSS      STATUS, 0
0x0084	0x2888      	GOTO       L_onesLoop7
;C_Code_Project.c,59 :: 		Flag1++;
0x0085	0x0AA0      	INCF       _Flag1, 1
0x0086	0x1903      	BTFSC      STATUS, 2
0x0087	0x0AA1      	INCF       _Flag1+1, 1
;C_Code_Project.c,60 :: 		}
L_onesLoop7:
;C_Code_Project.c,61 :: 		PORTA = Flag1;
0x0088	0x0820      	MOVF       _Flag1, 0
0x0089	0x0085      	MOVWF      PORTA
;C_Code_Project.c,62 :: 		if(Flag1 > 9){
0x008A	0x3080      	MOVLW      128
0x008B	0x00F0      	MOVWF      R0
0x008C	0x3080      	MOVLW      128
0x008D	0x0621      	XORWF      _Flag1+1, 0
0x008E	0x0270      	SUBWF      R0, 0
0x008F	0x1D03      	BTFSS      STATUS, 2
0x0090	0x2893      	GOTO       L__onesLoop31
0x0091	0x0820      	MOVF       _Flag1, 0
0x0092	0x3C09      	SUBLW      9
L__onesLoop31:
0x0093	0x1803      	BTFSC      STATUS, 0
0x0094	0x2896      	GOTO       L_onesLoop8
;C_Code_Project.c,63 :: 		tensLoop();
0x0095	0x204D      	CALL       _tensLoop
;C_Code_Project.c,64 :: 		}
L_onesLoop8:
;C_Code_Project.c,65 :: 		}
L_end_onesLoop:
0x0096	0x0008      	RETURN
; end of _onesLoop
_main:
;C_Code_Project.c,67 :: 		void main() {
;C_Code_Project.c,68 :: 		lastIsPressed = 1;
0x0097	0x1283      	BCF        STATUS, 5
0x0098	0x1303      	BCF        STATUS, 6
0x0099	0x1424      	BSF        _lastIsPressed, BitPos(_lastIsPressed+0)
;C_Code_Project.c,69 :: 		TRISB = 0;
0x009A	0x1683      	BSF        STATUS, 5
0x009B	0x0186      	CLRF       TRISB
;C_Code_Project.c,70 :: 		TRISC = 0;
0x009C	0x0187      	CLRF       TRISC
;C_Code_Project.c,71 :: 		TRISD = 0;
0x009D	0x0188      	CLRF       TRISD
;C_Code_Project.c,72 :: 		TRISA = 0;
0x009E	0x0185      	CLRF       TRISA
;C_Code_Project.c,73 :: 		ADCON1 = 0x0f;
0x009F	0x300F      	MOVLW      15
0x00A0	0x009F      	MOVWF      ADCON1
;C_Code_Project.c,74 :: 		TRISE.B0 = 1;
0x00A1	0x1409      	BSF        TRISE, 0
;C_Code_Project.c,75 :: 		TRISE.B1 = 1;
0x00A2	0x1489      	BSF        TRISE, 1
;C_Code_Project.c,76 :: 		portInit();
0x00A3	0x2046      	CALL       _portInit
;C_Code_Project.c,77 :: 		flagInit();
0x00A4	0x203B      	CALL       _flagInit
;C_Code_Project.c,78 :: 		while (1) {
L_main9:
;C_Code_Project.c,79 :: 		if (PORTE.B0 == 1 && !lastIsPressed) {
0x00A5	0x1C09      	BTFSS      PORTE, 0
0x00A6	0x28AC      	GOTO       L_main13
0x00A7	0x1824      	BTFSC      _lastIsPressed, BitPos(_lastIsPressed+0)
0x00A8	0x28AC      	GOTO       L_main13
L__main17:
;C_Code_Project.c,80 :: 		onesLoop();
0x00A9	0x2078      	CALL       _onesLoop
;C_Code_Project.c,81 :: 		lastIsPressed = 1;
0x00AA	0x1424      	BSF        _lastIsPressed, BitPos(_lastIsPressed+0)
;C_Code_Project.c,82 :: 		} else {
0x00AB	0x28B1      	GOTO       L_main14
L_main13:
;C_Code_Project.c,83 :: 		lastIsPressed = PORTE.B0;
0x00AC	0x1809      	BTFSC      PORTE, 0
0x00AD	0x28B0      	GOTO       L__main33
0x00AE	0x1024      	BCF        _lastIsPressed, BitPos(_lastIsPressed+0)
0x00AF	0x28B1      	GOTO       L__main34
L__main33:
0x00B0	0x1424      	BSF        _lastIsPressed, BitPos(_lastIsPressed+0)
L__main34:
;C_Code_Project.c,84 :: 		}
L_main14:
;C_Code_Project.c,85 :: 		if (PORTE.B1 == 1) {
0x00B1	0x1C89      	BTFSS      PORTE, 1
0x00B2	0x28B5      	GOTO       L_main15
;C_Code_Project.c,86 :: 		reset();
0x00B3	0x206F      	CALL       _reset
;C_Code_Project.c,87 :: 		} else {
0x00B4	0x28B6      	GOTO       L_main16
L_main15:
;C_Code_Project.c,88 :: 		PORTB.B1 = 0;
0x00B5	0x1086      	BCF        PORTB, 1
;C_Code_Project.c,89 :: 		}
L_main16:
;C_Code_Project.c,90 :: 		}
0x00B6	0x28A5      	GOTO       L_main9
;C_Code_Project.c,91 :: 		}
L_end_main:
0x00B7	0x28B7      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [22]    _thousandsLoop
0x0019      [34]    _hundredsLoop
0x003B      [11]    _flagInit
0x0046       [7]    _portInit
0x004D      [34]    _tensLoop
0x006F       [9]    _reset
0x0078      [31]    _onesLoop
0x0097      [33]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x0020       [2]    _Flag1
0x0022       [2]    _Flag2
0x0024       [0]    _lastIsPressed
0x0025       [2]    ___DoICPAddr
0x0027       [2]    _Flag3
0x0029       [2]    _Flag4
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0089       [1]    TRISE
0x009F       [1]    ADCON1
